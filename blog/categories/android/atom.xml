<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Android | What I learned today]]></title>
  <link href="http://jivimberg.github.io/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://jivimberg.github.io/"/>
  <updated>2014-08-22T20:46:39-07:00</updated>
  <id>http://jivimberg.github.io/</id>
  <author>
    <name><![CDATA[Juan Ignacio Vimberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android Animations Are Just a Trick]]></title>
    <link href="http://jivimberg.github.io/blog/2014/08/10/android-animations-are-just-a-trick/"/>
    <updated>2014-08-10T12:44:27-07:00</updated>
    <id>http://jivimberg.github.io/blog/2014/08/10/android-animations-are-just-a-trick</id>
    <content type="html"><![CDATA[<p>So I was learning to animate Views in Android using <a href="http://youtu.be/_UWXqFBF86U]">this video</a> and was having trouble with the second time the animation runned. First run the objects end up in their destination, second run it was mayhem.
I had fallen victim to the great misunderstanding everyone makes about Android animations: <strong>they are just a magic trick</strong>.</p>

<!--more-->


<p>The animated View isn&rsquo;t actually moving (or rotating, or scaling, or fading). The animation is actually just an order to the rendering engine to perform a last minute transformation on the desired object. <strong>The real object never leaves it&rsquo;s initial position.</strong></p>

<p>So the first time my animation runned I was making the view move from A to B. Now the second time I was trying to move it from B to C, but even when I was seeing the View in B (because I&rsquo;ve setted the <code>android:fillAfter="true"</code> flag) the real object was in A the whole time. Therefore the second run of the animation ended up in disaster.</p>

<p>To fix this there are 2 solutions:</p>

<ol>
<li>Update the View object once the animation has finished using an <a href="http://developer.android.com/reference/android/view/animation/Animation.AnimationListener.html">AnimationListener</a> and do it <code>onAnimationEnd()</code>.</li>
<li>Use an <a href="http://developer.android.com/reference/android/animation/ObjectAnimator.html">ObjectAnimator</a> which updates the underlying property while performing the animation. Or use <a href="http://nineoldandroids.com/">NineOldAndroids</a> if your target sdk is &lt;11.</li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AutoValue for Android]]></title>
    <link href="http://jivimberg.github.io/blog/2014/04/20/autovalue-for-android/"/>
    <updated>2014-04-20T17:14:00-07:00</updated>
    <id>http://jivimberg.github.io/blog/2014/04/20/autovalue-for-android</id>
    <content type="html"><![CDATA[<p>Remember <a href="blog/2014/04/07/value-types-the-easy-way/">my last post</a> on value types using <a href="https://github.com/google/auto/tree/master/value">Google&rsquo;s AutoValue</a>? Today while doing some work on a new Android project I&rsquo;m starting I thought: <em>&lsquo;Great chance to use AutoValue!&rsquo;</em>. Guess what, there is a port of Google AutoValue for the Android platform.</p>

<!-- More -->


<p>So the first thing I thought was: <em>&lsquo;Why do I need an special port of the AutoValue in the first place?&rsquo;</em>. Even though you could use the original <a href="https://github.com/google/auto/tree/master/value">Google&rsquo;s AutoValue</a> and it will work just find, there are 2 reasons why you should consider the Android port:</p>

<ol>
<li>Android AutoValue splits the project in 2 libraries. Only one is included in your apk (which just contains the interface) and the other is only used during compile time</li>
<li>Apart from all the things you get using the original lib the Android AutoValue also includes Parceable generation just adding <code>implements Parcelable</code> to your classes.</li>
</ol>


<p>That&rsquo;s pretty much all. Head to the <a href="https://github.com/frankiesardo/android-auto-value">Android Autovalue github repo</a> to see how to use it in your project.</p>
]]></content>
  </entry>
  
</feed>
