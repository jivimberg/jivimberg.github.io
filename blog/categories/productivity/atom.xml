<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Productivity | Coding Forest]]></title>
  <link href="http://jivimberg.io/blog/categories/productivity/atom.xml" rel="self"/>
  <link href="http://jivimberg.io/"/>
  <updated>2023-09-12T19:44:25-07:00</updated>
  <id>http://jivimberg.io/</id>
  <author>
    <name><![CDATA[Juan Ignacio Vimberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Graphic Design Tools for Backend Engineers]]></title>
    <link href="http://jivimberg.io/blog/2019/06/07/graphic-design-tools-for-backend-engineers/"/>
    <updated>2019-06-07T22:14:38-07:00</updated>
    <id>http://jivimberg.io/blog/2019/06/07/graphic-design-tools-for-backend-engineers</id>
    <content type="html"><![CDATA[<p>You might think that being a backend engineer means you‚Äôll never have to draw anything more complex than a bunch of boxes connected with arrows (or hexagons if are going all cloud native). This is simply not true, and that‚Äôs why you‚Äôre here.</p>

<p>At some point you‚Äôll find yourself producing system diagrams, flow-charts, slides, mockups, maybe even icons! So, let me show you some tools and tricks I picked up over the years to fake it at design.</p>

<!--more-->


<h2>Hand-draw images</h2>

<p>Maybe you noticed that some of the drawings that I use on this website look like they where done by a 5 year old. Like this one:</p>

<p><a href="https://jivimberg.io/blog/2019/02/23/sqs-consumer-using-kotlin-coroutines/"><img class="center" src="/images/posts/2019-06-18/consumerDiagram.png" width="800" title="‚ÄòA hand drawing‚Äô" ></a></p>

<p>I create these using <a href="https://products.office.com/en-us/onenote/digital-note-taking-app">Microsoft‚Äôs OneNote</a> on my wife‚Äôs <a href="https://www.microsoft.com/en-us/p/surface-pro-5th-gen/8nkt9wttrbjk?activetab=pivot:overviewtab">Surface Pro</a>. The app it‚Äôs somewhat basic, but it does one key thing: it lets you select your traces, move them around and scale them with simple gestures. And that‚Äôs really alI you need.</p>

<p><img class="center" src="/images/posts/2019-06-18/surfacePro.jpg" width="600" title="‚ÄòDrawing on a SurfacePro‚Äô" ></p>

<p>Also you can drop any kind of file to OneDrop and draw on top of it.</p>

<p><img class="center" src="/images/posts/2019-06-18/meFramed.png" width="200" title="‚ÄòA doodle on my face‚Äô" ></p>

<p>But, as I said, the Surface Pro is not mine, so I don‚Äôt get to take it to work. At the office I use a low-tech alternative: a <strong><a href="https://getrocketbook.com/">Rocketbook</a></strong>. It‚Äôs a notebook you can erase with water.</p>

<p><img class="center" src="/images/posts/2019-06-18/rocketbook.gif" title="‚ÄòRocketbook animation‚Äô" ></p>

<p>The pages are from a plasticky material, but it feels pretty close to drawing on actual paper. And you get karma points for not needing dead trees to do your half-ass doodles.</p>

<p>The best thing is that it comes with an app that allows you to scan your drawings and configure an action based on an icon you mark on the page. This helps me digitalize all my notes in a breeze. I can sketch something quickly, take out my phone and share it in Slack in 2 seconds, and without having to shell out $1k for an iPad.</p>

<p><img class="center" src="/images/posts/2019-06-18/slack.png" title="‚ÄòSlack conversation with drawing‚Äô" ></p>

<p>My only complain is that you have to wait a couple of minutes for the pages to dry when you‚Äôre cleaning it. So cleaning the whole book might take you 15 or 20 minutes. But I only do this once a month so it‚Äôs not that big of a deal for me.</p>

<h2>System diagrams and Flowcharts</h2>

<p>Let‚Äôs face it, most of your diagrams will still be boxes, cylinders and stick-figures. You don‚Äôt want your wiki page or slides including an image like this:</p>

<p><img class="center" src="/images/posts/2019-06-18/ugly-whiteboard.png" width="400" title="‚ÄòWhiteboard image that looks ugly‚Äô" ></p>

<p>Why not do it with style? Meet <strong><a href="https://whimsical.com">Whimsical</a></strong>. With this tool you‚Äôll be able to spit beautiful diagrams in seconds. It‚Äôs deceptively simple. It has smart snap to grip and auto-grouping that at times feels like it‚Äôs reading your mind.</p>

<p><img class="center" src="/images/posts/2019-06-18/whimsical.gif" width="800" title="‚ÄòWhimsical demo‚Äô" ></p>

<p>It can do flowcharts, mind maps, wireframes and sticky notes. The catch is you only get 4 <em>‚Äúboards‚Äù</em> for free. After that it‚Äôs $10 a monthüí∞</p>

<p>If you don‚Äôt feel like paying you can always use <a href="https://www.draw.io/">draw.io</a>. It has Google Drive integration, and a wide variety of shapes for different types of diagrams (Flow-chars, UML, BPMN, etc).</p>

<p>Use the comic style to get your diagrams to look like this:</p>

<p><a href="https://jivimberg.io/blog/2018/07/03/writing-githooks-in-kotlin/"><img class="center" src="/images/posts/2019-06-18/drawio.png" title="‚ÄòDraw.io example‚Äô" >¬†</a></p>

<p><em>(This diagram is from my <a href="https://jivimberg.io/blog/2018/07/03/writing-githooks-in-kotlin/">‚ÄúWriting Githooks in Kotlin‚Äù</a> post)</em></p>

<p>If all you‚Äôre trying to create is a UML of your existing code then you should check <a href="https://www.jetbrains.com/help/idea/class-diagram.html">this Intellij feature</a> that gives you just that in a couple clicks.</p>

<p><img class="center" src="/images/posts/2019-06-18/intellijUML.png" width="600" title="‚ÄòUML diagram from Intellij‚Äô" ></p>

<p>Similarly if you‚Äôre using Spring you can <a href="https://www.jetbrains.com/help/idea/spring-support.html">get a beans dependencies diagram</a> just as easily.</p>

<p><img class="center" src="/images/posts/2019-06-18/beans-dependencies.png" width="600" title="‚ÄòBeans dependencies diagram on Intellij‚Äô" ></p>

<h2>Sharing snippets of code</h2>

<p>If you need to share a snippet of code you can create a Gist like this one: <a href="https://gist.github.com/jivimberg/8cae46cdb5b98c0d19176efcde2eadd9">sendForm.gs</a>. And you can easily embed them in a page:</p>

<p><div><script src='https://gist.github.com/8cae46cdb5b98c0d19176efcde2eadd9.js'></script>
<noscript><pre><code>function sendFormEmail() {
    var toEmailAddress = &quot;someone@gmail.com&quot;;
    var htmlMessage = HtmlService.createHtmlOutputFromFile(&quot;Name-of-your-HTML-file.html&quot;).getContent();
    var subject = &quot;Subject&quot;;
    var message = &quot;Some message&quot;;
    MailApp.sendEmail(toEmailAddress, subject, message, {
      htmlBody: htmlMessage
    });
}

function createTimeDrivenTriggers() {
    // Trigger every day at 6 pm.
    ScriptApp.newTrigger(&#39;sendFormEmail&#39;)
    .timeBased()
    .atHour(18)
    .everyDays(1) // Frequency is required if you are using atHour() or nearMinute()
    .create();
}</code></pre></noscript></div>
</p>

<p>Gist are great because they have version history, can be commented, forked and starred and you can group multiple files in a single Gist.</p>

<p>If you happen to be working with Kotlin you can also use <a href="https://play.kotlinlang.org/">Kotlin Playground</a>, this way you also get the ability to execute the code. Here is <a href="https://pl.kotl.in/_h-DbUrtj">an example</a>. You can also embed them as well, or better yet, <a href="https://blog.jetbrains.com/kotlin/2018/04/embedding-kotlin-playground/">include Kotlin playground as a script in your page</a> and have all your code blocks converted to runnable snippets.</p>

<xmp class="kotlin-code" theme="darcula">
import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.FlowPreview
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.channels.consumeEach
import kotlinx.coroutines.channels.produce
import kotlinx.coroutines.coroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.asFlow
import kotlinx.coroutines.flow.collect
import kotlinx.coroutines.flow.flow
import kotlinx.coroutines.launch
import kotlin.system.measureTimeMillis

//sampleStart
@ExperimentalCoroutinesApi
@UseExperimental(FlowPreview::class)
suspend fun main() {
    val time = measureTimeMillis {
        (1..10).asFlow()
            .parallelMap(3, 3) { delay(100); it * 2 }
            .collect { print("$it ") }
    }
    println()
    println("Execution time in millis: $time")
}
//sampleEnd

@kotlinx.coroutines.FlowPreview
@kotlinx.coroutines.ExperimentalCoroutinesApi
fun <T, R> Flow<T>.parallelMap(
    bufferSize: Int,
    concurrency: Int,
    transform: suspend (value: T) -> R
): Flow<R> {
    require(bufferSize >= 0) { "Expected non-negative buffer size, but had $bufferSize" }
    require(concurrency > 0) { "Expected concurrency level greater than 0, but had $concurrency" }

    return flow {
        coroutineScope {
            val inputChannel = produce {
                collect { send(it) }
                close()
            }

            val outputChannel = Channel<R>(capacity = bufferSize)

            // Launch $concurrency workers that consume from
            // input channel (fan-out) and publish to output channel (fan-in)
            val workers = (1..concurrency).map {
                launch {
                    for (item in inputChannel) {
                        outputChannel.send(transform(item))
                    }
                }
            }

            // Wait for all workers to finish and close the output channel
            launch {
                workers.forEach { it.join() }
                outputChannel.close()
            }

            // consume from output channel and emit
            outputChannel.consumeEach { emit(it) }
        }
    }
}
</xmp>


<p>Finally, if all you want is to show some highlighted code you can use <a href="https://carbon.now.sh">carbon.sh</a> to get a beautiful image of your source code, like this one:</p>

<p><img class="center" src="/images/posts/2019-06-18/carbon.png" title="‚ÄòCarbon.sh demo‚Äô" ></p>

<h2>Presentations</h2>

<p>I‚Äôve used a lot of <a href="https://prezi.com"><strong>Prezis</strong></a> in the past. If you‚Äôve never seen a Prezi think a giant canvas where you drop stuff, and each slide is basically zooming to a different portion of the canvas. Here‚Äôs an example of a Prezi I did about the things I learned from <a href="https://www.coursera.org/learn/gamification">Coursera‚Äôs gamification course</a> by <a href="https://www.coursera.org/instructor/~226710">Kevin Werbach</a>.</p>

<iframe id="iframe_container" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" allow="autoplay; fullscreen" width="550" height="400" src="https://prezi.com/embed/uyg0exmhwbrn/?bgcolor=ffffff&amp;lock_to_path=0&amp;autoplay=0&amp;autohide_ctrls=0&amp;landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5dkNTakxDRmJwb3czakswMFhxZHJkNGtRPT0&amp;landing_sign=YH6jqN1LpGyTSh-ze0MNsqdGvDrfivc-HRxIPrpG7H8"></iframe>


<p>It‚Äôs an awesome tool that adds a world of possibilities to your presentations. But, with time I understood that just throwing cool transitions doesn‚Äôt make your presentation that much better. As any good designer knows, <a href="https://material.io/design/motion/#principles">animations need to serve a purpose</a>. Prezi works best when you use its zooming effects to reinforce the ideas you‚Äôre trying to communicate, or to use the canvas layout so that viewers get a good sense on how the content is organized. If you combine this tools in a meaningful way you can create amazing presentations <a href="https://prezi.com/mgujrvianlqb/virtual-tour-ceva-logistics/">like this one</a>.</p>

<p>This days, though, if I need to throw a deck together quickly, I hit <a href="https://www.slidescarnival.com/"><strong>Slides Carnivals</strong></a>. I pick a template that matches the topic I‚Äôm covering, import it in Google Slides and start working on it. Only if I need some fancy animations I‚Äôd use Keynote (see next topic).</p>

<p><img class="center" src="/images/posts/2019-06-18/slidesCarnival.png" width="800" title="‚ÄòSlides carnival‚Äô" ></p>

<p>Finally,  it doesn‚Äôt really matter which tools you use if you‚Äôre just going to cramp 3 paragraphs of text in a slide. And no, having bullet points doesn‚Äôt make it any better.  You need to <a href="https://zachholman.com/posts/slide-design-for-developers/">give your deck some ‚ù§Ô∏è</a>. But  that‚Äôs a topic for another day.</p>

<h2>Animations</h2>

<p>Animations can be super useful to visualize complex concepts. Specially on the backend world where much of our work consists of translating the mental model we have of the system into code. Creating visual cues, like animations, helps us communicate our intent in an unambiguous way.</p>

<p>Don‚Äôt believe me? Try explaining how the <a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/index.html">different kinds of Kotlin channels</a> behave using just words. Then check this animation:</p>

<p><img class="center" src="/images/posts/2019-04-18/Channels.gif" width="600" title="‚ÄòChannels animation‚Äô" ></p>

<p>You can create simple animations like this one üëÜ on <strong><a href="https://www.apple.com/keynote/">Keynote</a></strong>. Using <em>Magic move</em> and playing around with the order you can create all kind of choreographed animations. When you‚Äôre satisfied with the result, <a href="https://support.apple.com/kb/PH28038?locale=en_US&amp;viewlocale=en_US">you can export your creation as a gif</a> and share it with the world.</p>

<h2>UI Mocks</h2>

<p>If you ever worked with non-tech people you know the importance of showing something. Just telling them about what a system will do or how it would look it‚Äôs not enough. They have to see it üëÄ. That‚Äôs why low-res mockups are so powerful. You can use a tool like <a href="https://balsamiq.com/">Balsamiq</a> to create something like this in minutes. And you can even make them interactive to show how different screens would connect to each other.</p>

<p><img class="center" src="/images/posts/2019-06-18/balsamiq.png" width="600" title="‚Äòbalsamic example‚Äô" ></p>

<p>Whimsical also has wire-framing capabilities:</p>

<p><img class="center" src="/images/posts/2019-06-18/whimsical-wireframe.png" title="‚ÄòWhimsical wireframe‚Äô" ></p>

<p>If you‚Äôre looking for something more high-res checkout <a href="https://www.invisionapp.com">InVision</a>, that‚Äôs what all the cool kids are using this days.</p>

<h2>Logos, banners and more</h2>

<p><strong><a href="https://www.canva.com">Canva</a></strong> is probably the <strong>best design tools for non-designers</strong> you‚Äôll find online, hands down.  I‚Äôve used it for all kind of things. I‚Äôve used it to create logos:</p>

<p><img class="center" src="/images/posts/2019-06-18/Kassette.png" width="250" title="‚ÄòLogo created in Canva‚Äô" ></p>

<p>Presentations:</p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img class="left" src="/images/posts/2019-06-18/Stability.jpg" width="225" title="&lsquo;Stability&rsquo;" >¬†</a></p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img class="left" src="/images/posts/2019-06-18/MinimizeAccessibility.jpg" width="225" title="&lsquo;Minimize Accessibility&rsquo;" >¬†¬†</a></p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img src="/images/posts/2019-06-18/ImplVsInterface.jpg" width="225" title="&lsquo;Implementation Vs Interface&rsquo;" >¬†</a></p>

<p>My resume:</p>

<p><a href="https://drive.google.com/file/d/12FKryxTfewr_QtvQtTDMJf-NwmuySY2k/view"><img class="center" src="/images/posts/2019-06-18/resume-1.png" width="500" title="‚ÄòMy Resume‚Äô" ></a></p>

<p>Banners for <a href="https://play.google.com/store/apps/details?id=com.eightblocksaway.android.practicepronunciation&amp;hl=en_US">an Android app I wrote</a>:</p>

<p><a href="https://play.google.com/store/apps/details?id=com.eightblocksaway.android.practicepronunciation&amp;hl=en_US"><img class="center" src="/images/posts/2019-06-18/PracticePronunciation.png" width="400" title="‚ÄòPractice pronunciation banner‚Äô" ></a></p>

<p>And much, much more‚Ä¶ Seriously, if you‚Äôve never used it just go and check it out because it‚Äôs amazing, and super simple to use.</p>

<h2>Icons</h2>

<p>Check out the <a href="https://romannurik.github.io/AndroidAssetStudio/icons-generic.html">Icon generator</a>, part of the <a href="https://romannurik.github.io/AndroidAssetStudio/index.html">Android Asset Studio</a> tools put together by <a href="https://roman.nurik.net/">@Romanurik</a>. Specially if you‚Äôre doing something on Android.</p>

<h2>Bonus tips</h2>

<p><strong>Tip 1:</strong> Searching Google Images for some fancy image to drop into your diagram? Add <code>filetype:png</code> to your search to filter for PNG images. Also, make use the search tools to filter by color, size and license type!</p>

<p><strong>Tip 2:</strong> <strong><code>‚åò + Shift + 5</code></strong>. Screenshot everything. Screenshot your code in the IDE, screenshot multiple frames from a video and turn it into a gif, screenshot your drawings when the app you‚Äôre using doesn‚Äôt export to image (<a href="https://answers.microsoft.com/en-us/office/forum/office_2013_release-onenote/how-do-i-export-a-onenote-2013-page-as-an-image/825a08e3-f6c4-4d14-9e3e-c1ec54eb7b99?auth=1">I‚Äôm looking at you OneNote</a>). For example, for this post I wanted to create the photo border effect on my picture up there üëÜ. I knew Keynote had such effect but it‚Äôs not meant for image editing. So what did I do? I created a new slide with white background, drop my image, added the desired effect, <em>‚åò + Shift + 5¬†</em>, and voila! I know it‚Äôs hacky, but it gets the work done!</p>

<p><strong>Tip 3:</strong> Befriend graphic designers. Ask them what tools they use. Watch them work. Take note on how they dress.</p>

<p> <img class="right-fill" src="/images/signatures/signature2.png" width="200" title="‚ÄòMy signature‚Äô" ></p>

<script src="https://unpkg.com/kotlin-playground@1" data-selector=".kotlin-code"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IntelliJ IDEA Tips]]></title>
    <link href="http://jivimberg.io/blog/2018/06/10/intellij-idea-tips/"/>
    <updated>2018-06-10T17:11:52-07:00</updated>
    <id>http://jivimberg.io/blog/2018/06/10/intellij-idea-tips</id>
    <content type="html"><![CDATA[<p>Here are a couple of <strong>IntelliJ IDEA</strong> shortcuts and configurations I wish I‚Äôd known sooner.</p>

<!--more-->


<h2>1. Changing the default font</h2>

<p>The <strong>first</strong> thing I do every time I have to configure a new installation of IntelliJ is setting the theme to <em>Darcula</em>.</p>

<p><img class="center" src="/images/posts/2018-06-10/Darcula.png" width="720" title="‚ÄôDarcula theme‚Äô" ></p>

<p>The <strong>second</strong> thing I do is <strong>changing the font</strong> to <a href="https://github.com/tonsky/FiraCode">Fira Code</a>, and <strong>enabling font ligatures.</strong> Here‚Äôs how it looks like:</p>

<p><img class="center" src="/images/posts/2018-06-10/FiraCodeExample.png" width="720" title="‚ÄôFira code example‚Äô" ></p>

<p>You can enable this from <code>Settings</code> > <code>Editor</code> > <code>Font</code>. Make sure to check <code>Enable font ligatures</code> if you like that <code>‚â†</code> symbol.</p>

<p><img class="center" src="/images/posts/2018-06-10/FiraCode.png" width="720" title="‚ÄôFira code setting‚Äô" ></p>

<h2>2. Auto-reformat</h2>

<p>If you‚Äôre one of those developers that is obsessively hitting <code>‚å•‚áß‚åòL</code>  to get your code reformatted on every keystroke then <strong>I‚Äôm about to change your life</strong>.</p>

<p>First install the <strong><a href="https://plugins.jetbrains.com/plugin/7642-save-actions">Save actions</a></strong> plugin. Now open <code>Settings</code> > <code>Other settings</code> > <code>Save actions</code>, in there select:</p>

<ul>
<li><code>Activate save actions on save</code></li>
<li><code>Reformat file</code></li>
<li>And customize any other inspection and quick fix to your liking</li>
</ul>


<p><img class="center" src="/images/posts/2018-06-10/saveActions.png" width="720" title="‚ÄôSave actions settings‚Äô" ></p>

<p>Now your can just spit your <em>ugly</em> code and <strong>it‚Äôll get perfectly formatted on each save</strong>. <em>Nice uh?</em></p>

<h2>3. Extend selection</h2>

<p>This is not a configuration, but one of my <strong>favorite shortcuts</strong>. I learned this from a <a href="https://youtu.be/bFcaO1pXzws?t=20m13s">talk</a> by <a href="https://twitter.com/hhariri?ref_src=twsrc%5Egoogle%7Ctwcamp%5Eserp%7Ctwgr%5Eauthor">Hadi Hariri</a>.</p>

<p>What is it for? Paraphrasing the <a href="https://blog.jetbrains.com/idea/2013/05/30-days-with-intellij-idea-editor-basics/">IntelliJ blog</a>:</p>

<blockquote><p>Structural selection allows you to select expressions based on grammar. By pressing <code>‚å•‚Üë</code> you keep expanding your selection (starting from the caret). And vice versa, you can shrink it by pressing <code>‚å•‚Üì</code>.<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p></blockquote>

<p>Here you can see it in action:</p>

<p><img class="center" src="/images/posts/2018-06-10/expandSelection.gif" title="‚ÄôExpand and shrink selection animation‚Äô" ></p>

<p>Just mentioning this one because it was new to me at the time and nowadays I find myself using it <strong>all the time!</strong></p>

<h2>Have any IntelliJ tip to share? I‚Äôd love to know about it! <strong>Post a comment</strong> down here üëá</h2>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Had to update the key mappings in the quote because they were old in the original blog post.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Email Google Form Daily]]></title>
    <link href="http://jivimberg.io/blog/2014/08/21/email-google-form-daily/"/>
    <updated>2014-08-21T23:18:14-07:00</updated>
    <id>http://jivimberg.io/blog/2014/08/21/email-google-form-daily</id>
    <content type="html"><![CDATA[<p>Here I&rsquo;ll show you how you can email a Google Form daily, weekly or whatever. I&rsquo;ll achieve this by using <a href="https://developers.google.com/apps-script/">Google App Scripts</a>. Here we go</p>

<!--more-->


<p>1 - Create a Form (If you don&rsquo;t know how maybe this guide is a little bit too advanced for you, anyway you can start <a href="https://support.google.com/docs/answer/87809?hl=en">here</a>).</p>

<p>2 - Send this form to your email address using the <strong>Send Form</strong> button. Send it using the <strong>&ldquo;send form via email&rdquo;</strong> option, as shown in the picture:</p>

<p><img class="center" src="/images/posts/2014-08-21/SendForm.png" width="400" title="&lsquo;Send Form&rsquo;" ></p>

<p>3 - Now we need to get that form in HTML. To achieve this we will need the raw email. In GMail you can see it using the <strong>Show original</strong> option in the menu, from there you should copy everything that&rsquo;s enclosed in the <code>&lt;html&gt;...&lt;/html&gt;</code> tags (including the tags).</p>

<p><img class="center" src="/images/posts/2014-08-21/ShowOriginal.png" width="250" title="&lsquo;Show Original&rsquo;" ></p>

<p>4 - So we have the HTML but, at least if you obtain it like me, you&rsquo;ll notice that it is encoding as <strong>quoted-printable</strong>. I use <a href="http://www.webatic.com/run/convert/qp.php">this site</a> to decode it. Make sure you paste your code in the <strong>Encoded</strong> text field and press the <strong>decode</strong> button. Copy this code to your clipboard, we will need it later.</p>

<p>5 - Create a new Script from a Google Spreadsheet <em>( Tools > Script Manager&hellip; > New )</em>.</p>

<p>6 - In the Script Editor create a new HTML file <em>( File > New > Html file )</em> and paste your code from step 4. Once pasted remember to save the file. If you&rsquo;re seeing a red asterisk <span style="color:red"><em>*</em></span> by the name of the file that means it&rsquo;s not saved.</p>

<p>7 - In the <em>*.gs</em> paste the following code:</p>

<pre><code class="javascript">function sendFormEmail() {
    var toEmailAddress = "someone@gmail.com";  
    var htmlMessage = HtmlService.createHtmlOutputFromFile("Name-of-your-HTML-file.html").getContent();
    var subject = "Subject";
    var message = "Some message";
    MailApp.sendEmail(toEmailAddress, subject, message, {
      htmlBody: htmlMessage
    });
}
</code></pre>

<p>Make sure your replace all the fields with the actual values!</p>

<p>8 - Give it a go and run it once to see if it worked.</p>

<p>9 - Finally go to <em>Edit > Current project triggers</em>  and create a time driven trigger to run it daily (or weekly, or whatever suits your needs)<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup></p>

<p><img class="center" src="/images/posts/2014-08-21/Triggers.png" width="700" title="&lsquo;Triggers&rsquo;" ></p>

<p>9 (option B) - As <strong>an alternative</strong> you can define the triggers in the script itself using code as suggested by <a href="https://disqus.com/by/johannesschwaninger/">Johannes Schwaninger</a> in the comments. You can do so like this:</p>

<pre><code class="javascript">function createTimeDrivenTriggers() {
 // Trigger every day at 6 pm.
      ScriptApp.newTrigger('sendFormEmail')
      .timeBased()
      .atHour(18)
      .everyDays(1) // Frequency is required if you are using atHour() or nearMinute()
      .create();
}
</code></pre>

<p>10 - Relax and enjoy!</p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>If you‚Äôre not seeing the <em>time driven</em> option check that you‚Äôre accessing the script editor from a Spreadsheet and not from a Form. Or else just use the code alternative.<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
