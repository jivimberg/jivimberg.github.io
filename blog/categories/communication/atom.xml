<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Communication | Coding Forest]]></title>
  <link href="http://jivimberg.github.io/blog/categories/communication/atom.xml" rel="self"/>
  <link href="http://jivimberg.github.io/"/>
  <updated>2023-05-01T19:52:25-07:00</updated>
  <id>http://jivimberg.github.io/</id>
  <author>
    <name><![CDATA[Juan Ignacio Vimberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Craft Effective Presentations]]></title>
    <link href="http://jivimberg.github.io/blog/2020/03/13/how-to-create-effective-presentations/"/>
    <updated>2020-03-13T15:17:29-07:00</updated>
    <id>http://jivimberg.github.io/blog/2020/03/13/how-to-create-effective-presentations</id>
    <content type="html"><![CDATA[<p>This is a compilation of all the things I learned for creating effective presentations.</p>

<!--more-->


<h2>The golden rule: <strong>NO BULLET POINTS </strong></h2>

<p>If you can only take one thing from this article let it be this: <em>DO NOT use bullet-points on your slides</em>.</p>

<p>There&rsquo;s a simple reason for this: Humans brains are really dumb. They can’t process spoken and written words at the same time. <strong>People will either read the slides or listen to you, but not both.</strong> And since you’re presenting my guess is you want them paying attention to you. So drop all that extra text so people can focus on what you’re saying.</p>

<p><img class="center" src="/images/posts/2020-04-23/badExample.png" width="600" title="‘Slide with a lot of text’" ></p>

<p>The first step to a bullet-free slide is breaking your content into smaller chunks. <strong>Each slide should focus on a single idea that can be expressed in one or two sentences</strong> (no more than 20 words). Less is more. The rest of the content, the things that you’d normally put in the bullet points, can be spoken. There’s no limit to the number of slides you can use, just make sure you’re only adding the key points on text and speaking the rest.</p>

<p>You&rsquo;ll soon find out that doing this kind of breakdown is hard. Condensing each topic to a single line takes time. But I promise you, once you do this you’ll be halfway through to creating a great presentation.</p>

<p>Now that you have your central ideas, let&rsquo;s talk about styling. The main goal is to keep it simple so viewers are not distracted. Choose a sans-serif typeface (the ones without the ornaments) and make your text HUGE.</p>

<p><img class="center" src="/images/posts/2020-04-23/serif-vs-sans-serif.jpg" width="400" title="‘Example of serif and sans serif fonts’" ></p>

<p>Big letters are important because everybody in the room should be able to read it, and it’ll help you stay under the 20 words limit. Pick contrasting colors for text and background. You can use <a href="https://colorhunt.co/">Color Hunt</a> to find a cool palette for your deck.  Finally, place the text in the upper left corner. You can add an image or graph if needed, but don’t put something just because you have the space. Make sure it’s meaningful. Keep it short, keep it simple.</p>

<p><img class="center" src="/images/posts/2020-04-23/bigText.png" width="600" title="‘Big text is easier to read’" ></p>

<p style='text-align: center;'>
(Yes, this is the whole slide)
</p>


<h2>The handout</h2>

<p>You might be worried that, by removing text from the slides, people won’t get the full context when going through your deck after the presentation. The solution is to create 2 different artifacts: a presentation and a handout.</p>

<p>All you have to do is move the text from the slides to the presenter notes.</p>

<p><img class="center" src="/images/posts/2020-04-23/presenterNotes.png" width="600" title="‘Handout example’" ></p>

<p>Then, to email your presentation just select <em>Print settings and preview</em> and choose <em>1 slide with notes</em>. Now you have a PDF handout to send after the presentation that includes all the context needed to understand each slide. As a bonus you also get notes you can use while presenting.</p>

<h2>Guiding the audience focus</h2>

<p>Now that we have trimmed the fat from the content it’s time to deal with other sources of distraction. Every single thing not contributing to the message is noise and should go.</p>

<p>First, avoid cluttered templates. They might look cute on page but they can distract the audience.</p>

<p><img class="center" src="/images/posts/2020-04-23/clutteredTemplates.png" width="600" title="‘Example of a slide with a cluttered template’" ></p>

<p>Also, get rid of all the cheese transitions. The only animations you should need is <em>appear </em>and<em> disappear</em> to reveal content as you talk. You can also color and opacity on text or images to guide the audience attention. To achieve this you simply duplicate the slide and apply the appropriate changes.</p>

<p><img class="center" src="/images/posts/2020-04-23/focus.gif" width="600" title="‘Example of using color and opacity to guide audience focus’" ></p>

<p>The only exception to the &ldquo;no animation rule&rdquo; is if your animation is needed to express the slide’s idea. For example, you might animate a pointer to represent the order of execution on a snippet of code, as I did here:</p>

<p><img class="center" src="/images/posts/2020-04-23/animationExample2.gif" title="‘Example of a valid use of animation in a slide’" ></p>

<p style='text-align: center;'>
(I used Magic Move on  Keynote to create this)
</p>


<p>The same rule applies to all other elements of your slide: layout, image size and placement, color, etc. People will infer meaning from all these things, so make sure they’re reinforcing your message and not working against it. For example if you’re talking about three things that happened one after the other align them horizontally and sort them left to right. If you mention a big number make the text big. If you’re comparing two similar things make them the same size and place them side by side. Note how in the “elements of design” slide shown above, the text placement emphasizes the words’ meaning.</p>

<p>Finally, if you have gifs on you presentation, <strong>make sure to stop them after one or two repetitions</strong>. Anything, blinking or moving on the screen is competing with you for attention. <a href="https://davidwalsh.name/prevent-gif-loop">https://davidwalsh.name/prevent-gif-loop</a></p>

<h2>Start with a hook</h2>

<blockquote><p>Humans think in stories, and we try to make sense of the world by telling stories. <em>Yuval Noah Harari</em></p></blockquote>

<p>You know how most presentations start with: &ldquo;My name is Juan and I’m professional turtle trainer, today I’ll talk about depression in turtles“? People already showed up, so they either know who you are or care about the topic you’ll be presenting about, or both. So instead of opening with a boring introduction try using a hook.</p>

<p>Review Start your presentation with a story, a joke or an anecdote related to the topic. Grab the attention of the audience from your first line. Once they’re  hooked in and paying attention you can introduce yourself. You see this all the time on TED talks like this one:</p>

<div style="max-width:600px;margin:30px auto"><div style="position:relative;height:0;padding-bottom:56.25%"><iframe src="https://embed.ted.com/talks/shawn_achor_the_happy_secret_to_better_work" width="854" height="480" style="position:absolute;left:0;top:0;width:100%;height:100%" frameborder="0" scrolling="no" allowfullscreen></iframe></div></div>


<h2>Repeat, Repeat, Repeat</h2>

<p>If you want your message to stick <strong>say it multiple times</strong>. The trick to avoid boring your audience is to say the same thing in many different ways. Paraphrase, use an image, present an example or a counter-example, make a rethorical question, use a conversational style… Get creative!</p>

<p>This works because different people prefer different styles of communication. Some of us are more visually inclined, some like specific examples over generalizations, etc. Also, by repeating the mains ideas you’re signaling the audience what’s important. You’re separating the wheat from the chaff. Last but not least, it also works because people get distracted and they might have missed the point the first time.</p>

<p>When possible try to evoke some emotion. As the <a href="https://en.wikipedia.org/wiki/Head_First_(book_series)">Head First Series</a> taught us: <em>“brains are tuned to pay attention to the biochemistry of emotions”</em>. Share a personal anecdote, make them laugh with a joke or pique their curiosity with a controversial claim and you can guarantee they’ll be paying attention.</p>

<h2>The slides</h2>

<p>Let&rsquo;s go over some of the most common types of slides and how to improve them.</p>

<h3>The title slide</h3>

<p>Most of the time the title slide includes just the title of the talk. Instead, consider providing some context on what’s going to be covered in the presentation as a full sentence. If you’re opening with a hook you can have visuals on your title slide to get right into it.</p>

<p><img class="center" src="/images/posts/2020-04-23/titleSlides.png" width="700" title="‘Example of title slides’" ></p>

<h3>The intro slide</h3>

<p>Consider using a blank screen for your introduction. This way you guarantee the attention will be on you and not your slides. Another option is to use a personal photo, related to the topic at hand. Either way, remember that it’s best to open with a hook instead of your introduction.</p>

<h3>The agenda slide</h3>

<p>Most of the time you don&rsquo;t really need an agenda slide. Just jump straight to the content. But if you do include one, make sure you use a small number of sections. Three or four is the sweet spot. You can use images and colors as visual representation of each section.</p>

<h3>The quote slide</h3>

<p>You should have the quote on your slide, only if you’re going to read it word by word. If what you’re saying doesn’t match the text on the screen people will get confused. Another option is to simply blank the screen while reading the quote (here you get to paraphrase if you want).</p>

<h3>The image slide</h3>

<p>When using images go big. Don&rsquo;t worry about breaking the template if you’re using one. Take an empty slide and set the image as background. Don’t put text on it unless you really need to. And if you do use contrasting colors, or place the text over a box with a transparent background to make it readable.</p>

<p><img class="center" src="/images/posts/2020-04-23/imageSlides.png" width="700" title="‘Examples of image slides’" ></p>

<h3>The code slide</h3>

<p>Make sure to use syntax highlighting to make the code more readable. Copy and paste from your favorite IDE or use an online syntax highlighting tool to get a color palette that works with your background.</p>

<p><strong>Remove all boilerplate</strong>. If it’s obvious it can be omitted. For example, if you’re showing  a Java class remove all getters, setters and constructors. Don’t worry if the code on the slide doesn’t really compile. You can include the actual code in the handout or link to a public repo or gist.</p>

<p>If the code has multiple parts you&rsquo;ll be talking about, highlight only the section you’re focusing on and gray out all the rest.</p>

<p><img class="center" src="/images/posts/2020-04-23/codeSlide.gif" width="600" title="‘Example of using color and opacity to guide audience focus’" ></p>

<p>Consider using pseudo code so people don&rsquo;t need to be familiar with your language of choice to understand the slide.</p>

<p>Finally, if you like living on the edge and want to do live coding on the stage, you can open your code in full screen on a different workspace and have a separator slide to transition to the editor. Some IDEs have a <a href="https://www.jetbrains.com/help/idea/ide-viewing-modes.html">presentation mode</a> you can use to make the font huge and remove all other distractions. Just make sure to have a plan B because demos always fail.</p>

<h3>The &ldquo;Thank You&rdquo; slide</h3>

<p>Many times this is the slide that stays on screen for the most time. Don’t just write “Thank you” or “Q &amp; A”. Use it to present a summary of the main ideas on your presentation. Make sure to include your social handles in case somebody from the audience wants to reach out to you.</p>

<h2>Bonus: Blanking out the screen</h2>

<p>In this article I mention using an empty slide or blanking out the screen for some sections like the introduction or the quote slide. Having nothing on the screen means all eyes are on you. There’s nothing competing for the audience attention. You’ll be surprised with how well this works.</p>

<p>To achieve this you can either user an empty slide with a black background, or use one of the <a href="https://support.google.com/docs/answer/1696717?co=GENIE.Platform=Desktop&amp;hl=en">keyboard shortcuts</a> in any part of your presentation.</p>

<hr />

<h2>Acknowledgements</h2>

<p>Some of these things I learned from <a href="https://zachholman.com/talks">Zach Holman writings</a> (check his website <a href="https://speaking.io/">speaking.io</a>). More recently I attended a course from <a href="http://christinehaasconsulting.com/services/">Christine Haas Consulting</a> which really helped me polish my presentation skills. The rest comes from years of watching great presenters and practicing. That’s the only way to improve, right?</p>

<p> <img class="right-fill" src="/images/signatures/signature3.png" width="200" title="‘My signature’" ></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Graphic Design Tools for Backend Engineers]]></title>
    <link href="http://jivimberg.github.io/blog/2019/06/07/graphic-design-tools-for-backend-engineers/"/>
    <updated>2019-06-07T22:14:38-07:00</updated>
    <id>http://jivimberg.github.io/blog/2019/06/07/graphic-design-tools-for-backend-engineers</id>
    <content type="html"><![CDATA[<p>You might think that being a backend engineer means you’ll never have to draw anything more complex than a bunch of boxes connected with arrows (or hexagons if are going all cloud native). This is simply not true, and that’s why you’re here.</p>

<p>At some point you’ll find yourself producing system diagrams, flow-charts, slides, mockups, maybe even icons! So, let me show you some tools and tricks I picked up over the years to fake it at design.</p>

<!--more-->


<h2>Hand-draw images</h2>

<p>Maybe you noticed that some of the drawings that I use on this website look like they where done by a 5 year old. Like this one:</p>

<p><a href="https://jivimberg.io/blog/2019/02/23/sqs-consumer-using-kotlin-coroutines/"><img class="center" src="/images/posts/2019-06-18/consumerDiagram.png" width="800" title="‘A hand drawing’" ></a></p>

<p>I create these using <a href="https://products.office.com/en-us/onenote/digital-note-taking-app">Microsoft’s OneNote</a> on my wife’s <a href="https://www.microsoft.com/en-us/p/surface-pro-5th-gen/8nkt9wttrbjk?activetab=pivot:overviewtab">Surface Pro</a>. The app it’s somewhat basic, but it does one key thing: it lets you select your traces, move them around and scale them with simple gestures. And that’s really alI you need.</p>

<p><img class="center" src="/images/posts/2019-06-18/surfacePro.jpg" width="600" title="‘Drawing on a SurfacePro’" ></p>

<p>Also you can drop any kind of file to OneDrop and draw on top of it.</p>

<p><img class="center" src="/images/posts/2019-06-18/meFramed.png" width="200" title="‘A doodle on my face’" ></p>

<p>But, as I said, the Surface Pro is not mine, so I don’t get to take it to work. At the office I use a low-tech alternative: a <strong><a href="https://getrocketbook.com/">Rocketbook</a></strong>. It’s a notebook you can erase with water.</p>

<p><img class="center" src="/images/posts/2019-06-18/rocketbook.gif" title="‘Rocketbook animation’" ></p>

<p>The pages are from a plasticky material, but it feels pretty close to drawing on actual paper. And you get karma points for not needing dead trees to do your half-ass doodles.</p>

<p>The best thing is that it comes with an app that allows you to scan your drawings and configure an action based on an icon you mark on the page. This helps me digitalize all my notes in a breeze. I can sketch something quickly, take out my phone and share it in Slack in 2 seconds, and without having to shell out $1k for an iPad.</p>

<p><img class="center" src="/images/posts/2019-06-18/slack.png" title="‘Slack conversation with drawing’" ></p>

<p>My only complain is that you have to wait a couple of minutes for the pages to dry when you’re cleaning it. So cleaning the whole book might take you 15 or 20 minutes. But I only do this once a month so it’s not that big of a deal for me.</p>

<h2>System diagrams and Flowcharts</h2>

<p>Let’s face it, most of your diagrams will still be boxes, cylinders and stick-figures. You don’t want your wiki page or slides including an image like this:</p>

<p><img class="center" src="/images/posts/2019-06-18/ugly-whiteboard.png" width="400" title="‘Whiteboard image that looks ugly’" ></p>

<p>Why not do it with style? Meet <strong><a href="https://whimsical.com">Whimsical</a></strong>. With this tool you’ll be able to spit beautiful diagrams in seconds. It’s deceptively simple. It has smart snap to grip and auto-grouping that at times feels like it’s reading your mind.</p>

<p><img class="center" src="/images/posts/2019-06-18/whimsical.gif" width="800" title="‘Whimsical demo’" ></p>

<p>It can do flowcharts, mind maps, wireframes and sticky notes. The catch is you only get 4 <em>“boards”</em> for free. After that it’s $10 a month💰</p>

<p>If you don’t feel like paying you can always use <a href="https://www.draw.io/">draw.io</a>. It has Google Drive integration, and a wide variety of shapes for different types of diagrams (Flow-chars, UML, BPMN, etc).</p>

<p>Use the comic style to get your diagrams to look like this:</p>

<p><a href="https://jivimberg.io/blog/2018/07/03/writing-githooks-in-kotlin/"><img class="center" src="/images/posts/2019-06-18/drawio.png" title="‘Draw.io example’" > </a></p>

<p><em>(This diagram is from my <a href="https://jivimberg.io/blog/2018/07/03/writing-githooks-in-kotlin/">“Writing Githooks in Kotlin”</a> post)</em></p>

<p>If all you’re trying to create is a UML of your existing code then you should check <a href="https://www.jetbrains.com/help/idea/class-diagram.html">this Intellij feature</a> that gives you just that in a couple clicks.</p>

<p><img class="center" src="/images/posts/2019-06-18/intellijUML.png" width="600" title="‘UML diagram from Intellij’" ></p>

<p>Similarly if you’re using Spring you can <a href="https://www.jetbrains.com/help/idea/spring-support.html">get a beans dependencies diagram</a> just as easily.</p>

<p><img class="center" src="/images/posts/2019-06-18/beans-dependencies.png" width="600" title="‘Beans dependencies diagram on Intellij’" ></p>

<h2>Sharing snippets of code</h2>

<p>If you need to share a snippet of code you can create a Gist like this one: <a href="https://gist.github.com/jivimberg/8cae46cdb5b98c0d19176efcde2eadd9">sendForm.gs</a>. And you can easily embed them in a page:</p>

<p><div><script src='https://gist.github.com/8cae46cdb5b98c0d19176efcde2eadd9.js'></script>
<noscript><pre><code>function sendFormEmail() {
    var toEmailAddress = &quot;someone@gmail.com&quot;;
    var htmlMessage = HtmlService.createHtmlOutputFromFile(&quot;Name-of-your-HTML-file.html&quot;).getContent();
    var subject = &quot;Subject&quot;;
    var message = &quot;Some message&quot;;
    MailApp.sendEmail(toEmailAddress, subject, message, {
      htmlBody: htmlMessage
    });
}

function createTimeDrivenTriggers() {
    // Trigger every day at 6 pm.
    ScriptApp.newTrigger(&#39;sendFormEmail&#39;)
    .timeBased()
    .atHour(18)
    .everyDays(1) // Frequency is required if you are using atHour() or nearMinute()
    .create();
}</code></pre></noscript></div>
</p>

<p>Gist are great because they have version history, can be commented, forked and starred and you can group multiple files in a single Gist.</p>

<p>If you happen to be working with Kotlin you can also use <a href="https://play.kotlinlang.org/">Kotlin Playground</a>, this way you also get the ability to execute the code. Here is <a href="https://pl.kotl.in/_h-DbUrtj">an example</a>. You can also embed them as well, or better yet, <a href="https://blog.jetbrains.com/kotlin/2018/04/embedding-kotlin-playground/">include Kotlin playground as a script in your page</a> and have all your code blocks converted to runnable snippets.</p>

<xmp class="kotlin-code" theme="darcula">
import kotlinx.coroutines.ExperimentalCoroutinesApi
import kotlinx.coroutines.FlowPreview
import kotlinx.coroutines.channels.Channel
import kotlinx.coroutines.channels.consumeEach
import kotlinx.coroutines.channels.produce
import kotlinx.coroutines.coroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.asFlow
import kotlinx.coroutines.flow.collect
import kotlinx.coroutines.flow.flow
import kotlinx.coroutines.launch
import kotlin.system.measureTimeMillis

//sampleStart
@ExperimentalCoroutinesApi
@UseExperimental(FlowPreview::class)
suspend fun main() {
    val time = measureTimeMillis {
        (1..10).asFlow()
            .parallelMap(3, 3) { delay(100); it * 2 }
            .collect { print("$it ") }
    }
    println()
    println("Execution time in millis: $time")
}
//sampleEnd

@kotlinx.coroutines.FlowPreview
@kotlinx.coroutines.ExperimentalCoroutinesApi
fun <T, R> Flow<T>.parallelMap(
    bufferSize: Int,
    concurrency: Int,
    transform: suspend (value: T) -> R
): Flow<R> {
    require(bufferSize >= 0) { "Expected non-negative buffer size, but had $bufferSize" }
    require(concurrency > 0) { "Expected concurrency level greater than 0, but had $concurrency" }

    return flow {
        coroutineScope {
            val inputChannel = produce {
                collect { send(it) }
                close()
            }

            val outputChannel = Channel<R>(capacity = bufferSize)

            // Launch $concurrency workers that consume from
            // input channel (fan-out) and publish to output channel (fan-in)
            val workers = (1..concurrency).map {
                launch {
                    for (item in inputChannel) {
                        outputChannel.send(transform(item))
                    }
                }
            }

            // Wait for all workers to finish and close the output channel
            launch {
                workers.forEach { it.join() }
                outputChannel.close()
            }

            // consume from output channel and emit
            outputChannel.consumeEach { emit(it) }
        }
    }
}
</xmp>


<p>Finally, if all you want is to show some highlighted code you can use <a href="https://carbon.now.sh">carbon.sh</a> to get a beautiful image of your source code, like this one:</p>

<p><img class="center" src="/images/posts/2019-06-18/carbon.png" title="‘Carbon.sh demo’" ></p>

<h2>Presentations</h2>

<p>I’ve used a lot of <a href="https://prezi.com"><strong>Prezis</strong></a> in the past. If you’ve never seen a Prezi think a giant canvas where you drop stuff, and each slide is basically zooming to a different portion of the canvas. Here’s an example of a Prezi I did about the things I learned from <a href="https://www.coursera.org/learn/gamification">Coursera’s gamification course</a> by <a href="https://www.coursera.org/instructor/~226710">Kevin Werbach</a>.</p>

<iframe id="iframe_container" frameborder="0" webkitallowfullscreen="" mozallowfullscreen="" allowfullscreen="" allow="autoplay; fullscreen" width="550" height="400" src="https://prezi.com/embed/uyg0exmhwbrn/?bgcolor=ffffff&amp;lock_to_path=0&amp;autoplay=0&amp;autohide_ctrls=0&amp;landing_data=bHVZZmNaNDBIWnNjdEVENDRhZDFNZGNIUE43MHdLNWpsdFJLb2ZHanI5dkNTakxDRmJwb3czakswMFhxZHJkNGtRPT0&amp;landing_sign=YH6jqN1LpGyTSh-ze0MNsqdGvDrfivc-HRxIPrpG7H8"></iframe>


<p>It’s an awesome tool that adds a world of possibilities to your presentations. But, with time I understood that just throwing cool transitions doesn’t make your presentation that much better. As any good designer knows, <a href="https://material.io/design/motion/#principles">animations need to serve a purpose</a>. Prezi works best when you use its zooming effects to reinforce the ideas you’re trying to communicate, or to use the canvas layout so that viewers get a good sense on how the content is organized. If you combine this tools in a meaningful way you can create amazing presentations <a href="https://prezi.com/mgujrvianlqb/virtual-tour-ceva-logistics/">like this one</a>.</p>

<p>This days, though, if I need to throw a deck together quickly, I hit <a href="https://www.slidescarnival.com/"><strong>Slides Carnivals</strong></a>. I pick a template that matches the topic I’m covering, import it in Google Slides and start working on it. Only if I need some fancy animations I’d use Keynote (see next topic).</p>

<p><img class="center" src="/images/posts/2019-06-18/slidesCarnival.png" width="800" title="‘Slides carnival’" ></p>

<p>Finally,  it doesn’t really matter which tools you use if you’re just going to cramp 3 paragraphs of text in a slide. And no, having bullet points doesn’t make it any better.  You need to <a href="https://zachholman.com/posts/slide-design-for-developers/">give your deck some ❤️</a>. But  that’s a topic for another day.</p>

<h2>Animations</h2>

<p>Animations can be super useful to visualize complex concepts. Specially on the backend world where much of our work consists of translating the mental model we have of the system into code. Creating visual cues, like animations, helps us communicate our intent in an unambiguous way.</p>

<p>Don’t believe me? Try explaining how the <a href="https://kotlin.github.io/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines.channels/index.html">different kinds of Kotlin channels</a> behave using just words. Then check this animation:</p>

<p><img class="center" src="/images/posts/2019-04-18/Channels.gif" width="600" title="‘Channels animation’" ></p>

<p>You can create simple animations like this one 👆 on <strong><a href="https://www.apple.com/keynote/">Keynote</a></strong>. Using <em>Magic move</em> and playing around with the order you can create all kind of choreographed animations. When you’re satisfied with the result, <a href="https://support.apple.com/kb/PH28038?locale=en_US&amp;viewlocale=en_US">you can export your creation as a gif</a> and share it with the world.</p>

<h2>UI Mocks</h2>

<p>If you ever worked with non-tech people you know the importance of showing something. Just telling them about what a system will do or how it would look it’s not enough. They have to see it 👀. That’s why low-res mockups are so powerful. You can use a tool like <a href="https://balsamiq.com/">Balsamiq</a> to create something like this in minutes. And you can even make them interactive to show how different screens would connect to each other.</p>

<p><img class="center" src="/images/posts/2019-06-18/balsamiq.png" width="600" title="‘balsamic example’" ></p>

<p>Whimsical also has wire-framing capabilities:</p>

<p><img class="center" src="/images/posts/2019-06-18/whimsical-wireframe.png" title="‘Whimsical wireframe’" ></p>

<p>If you’re looking for something more high-res checkout <a href="https://www.invisionapp.com">InVision</a>, that’s what all the cool kids are using this days.</p>

<h2>Logos, banners and more</h2>

<p><strong><a href="https://www.canva.com">Canva</a></strong> is probably the <strong>best design tools for non-designers</strong> you’ll find online, hands down.  I’ve used it for all kind of things. I’ve used it to create logos:</p>

<p><img class="center" src="/images/posts/2019-06-18/Kassette.png" width="250" title="‘Logo created in Canva’" ></p>

<p>Presentations:</p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img class="left" src="/images/posts/2019-06-18/Stability.jpg" width="225" title="&lsquo;Stability&rsquo;" > </a></p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img class="left" src="/images/posts/2019-06-18/MinimizeAccessibility.jpg" width="225" title="&lsquo;Minimize Accessibility&rsquo;" >  </a></p>

<p><a href="https://jivimberg.io/blog/2014/10/12/notes-on-api-design/"><img src="/images/posts/2019-06-18/ImplVsInterface.jpg" width="225" title="&lsquo;Implementation Vs Interface&rsquo;" > </a></p>

<p>My resume:</p>

<p><a href="https://drive.google.com/file/d/12FKryxTfewr_QtvQtTDMJf-NwmuySY2k/view"><img class="center" src="/images/posts/2019-06-18/resume-1.png" width="500" title="‘My Resume’" ></a></p>

<p>Banners for <a href="https://play.google.com/store/apps/details?id=com.eightblocksaway.android.practicepronunciation&amp;hl=en_US">an Android app I wrote</a>:</p>

<p><a href="https://play.google.com/store/apps/details?id=com.eightblocksaway.android.practicepronunciation&amp;hl=en_US"><img class="center" src="/images/posts/2019-06-18/PracticePronunciation.png" width="400" title="‘Practice pronunciation banner’" ></a></p>

<p>And much, much more… Seriously, if you’ve never used it just go and check it out because it’s amazing, and super simple to use.</p>

<h2>Icons</h2>

<p>Check out the <a href="https://romannurik.github.io/AndroidAssetStudio/icons-generic.html">Icon generator</a>, part of the <a href="https://romannurik.github.io/AndroidAssetStudio/index.html">Android Asset Studio</a> tools put together by <a href="https://roman.nurik.net/">@Romanurik</a>. Specially if you’re doing something on Android.</p>

<h2>Bonus tips</h2>

<p><strong>Tip 1:</strong> Searching Google Images for some fancy image to drop into your diagram? Add <code>filetype:png</code> to your search to filter for PNG images. Also, make use the search tools to filter by color, size and license type!</p>

<p><strong>Tip 2:</strong> <strong><code>⌘ + Shift + 5</code></strong>. Screenshot everything. Screenshot your code in the IDE, screenshot multiple frames from a video and turn it into a gif, screenshot your drawings when the app you’re using doesn’t export to image (<a href="https://answers.microsoft.com/en-us/office/forum/office_2013_release-onenote/how-do-i-export-a-onenote-2013-page-as-an-image/825a08e3-f6c4-4d14-9e3e-c1ec54eb7b99?auth=1">I’m looking at you OneNote</a>). For example, for this post I wanted to create the photo border effect on my picture up there 👆. I knew Keynote had such effect but it’s not meant for image editing. So what did I do? I created a new slide with white background, drop my image, added the desired effect, <em>⌘ + Shift + 5 </em>, and voila! I know it’s hacky, but it gets the work done!</p>

<p><strong>Tip 3:</strong> Befriend graphic designers. Ask them what tools they use. Watch them work. Take note on how they dress.</p>

<p> <img class="right-fill" src="/images/signatures/signature2.png" width="200" title="‘My signature’" ></p>

<script src="https://unpkg.com/kotlin-playground@1" data-selector=".kotlin-code"></script>



]]></content>
  </entry>
  
</feed>
