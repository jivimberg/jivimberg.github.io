<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Agile | Coding Forest]]></title>
  <link href="http://jivimberg.github.io/blog/categories/agile/atom.xml" rel="self"/>
  <link href="http://jivimberg.github.io/"/>
  <updated>2021-09-26T11:46:44-07:00</updated>
  <id>http://jivimberg.github.io/</id>
  <author>
    <name><![CDATA[Juan Ignacio Vimberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Book Recommendations: Shape Up]]></title>
    <link href="http://jivimberg.github.io/blog/2019/09/15/book-recommendations-shape-up/"/>
    <updated>2019-09-15T10:51:31-07:00</updated>
    <id>http://jivimberg.github.io/blog/2019/09/15/book-recommendations-shape-up</id>
    <content type="html"><![CDATA[<p>I love reading about how people do creative work. Be it <a href="https://en.wikipedia.org/wiki/On_Writing:_A_Memoir_of_the_Craft">writing books</a> or <a href="http://the-witness.net/news/">designing video games</a>, there‚Äôs something magical about peeking behind the curtain and learning how the pros do their thing.</p>

<p>Today I‚Äôm reviewing <a href="https://basecamp.com/shapeup">Shape Up</a>, a book about the process of writing software at Basecamp.</p>

<!--more-->


<p><a href="https://basecamp.com/shapeup"><img class="center" src="/images/posts/2019-09-29/shapeUpCover.png" width="700" title="‚ÄòBook cover‚Äô" ></a></p>

<p>(<em>I promise those potato shapes ‚òùÔ∏è will make sense by the time you finish the book</em>)</p>

<h1>What is it?</h1>

<p>Shape Up is a book by¬†<a href="https://twitter.com/rjs">Ryan Singer</a> about how <a href="https://basecamp.com/about">Basecamp</a> (the company) writes <a href="https://basecamp.com/">Basecamp</a> (the app). It goes through the development process, from the moment a new idea comes up, ‚Äòtill it shows up in production as a fully implemented feature.</p>

<h1>Why does it matter?</h1>

<p><strong>Because it‚Äôs fresh!</strong> This is not your run-of-the-mill <em>‚ÄúHow we do Agile‚Äù</em> kind of book. There are no Kickoff meetings, no Kanban boards, no Daily Standup. They don‚Äôt even keep a backlog!</p>

<p>Coming from the people that wrote <a href="https://basecamp.com/books/remote">Remote</a> and <a href="https://basecamp.com/books/calm">It doesn‚Äôt have to be crazy at work</a>, you know this is a company that‚Äôs not afraid to innovate.</p>

<p><blockquote><p>Now that our process is fully formed, documented, and ready to go, we‚Äôre here to share it with all those curious enough to listen to a new way of doing things. Explorers, pioneers, those who don‚Äôt care what everyone else is doing. Those who want to work better than the rest.</p><footer><strong>Jason Fried</strong> <cite>Basecamp CEO</cite></footer></blockquote></p>

<p>Also, it doesn‚Äôt hurt that it is short, well-written, and has real-life examples and stick-figure drawings. <strong>Oh! and it‚Äôs free!! üí∏</strong></p>

<h1>So, what did you learn?</h1>

<p>A bunch of things! I‚Äôm not going to cover everything because I wouldn‚Äôt be able to do it justice. Instead, I‚Äôll focus on a couple of nuggets of wisdom. If you find them interesting, go check the book! Getting a better sense of how the whole process is structured shines a new light on the bits you‚Äôll find described here.</p>

<h2>The shape of your task</h2>

<p>A big part of the book is about what happens before the developer starts coding. It is about choosing and defining what‚Äôs going to be built. This is what Basecamp calls <a href="https://basecamp.com/shapeup/1.1-chapter-02"><em>‚ÄùShaping‚Äù</em></a>, and it is so integral to their process that it‚Äôs right there on the book‚Äôs title. I found this refreshing since, more often than not, books will focus on the execution of tasks instead of how to come up with them.</p>

<p>Basecamp uses cycles of six weeks.  While the developers are busy delivering features, a group of senior staff members<sup id="fnref:1"><a href="#fn:1" rel="footnote">1</a></sup> works on defining what‚Äôs going to come next. If the project is approved (more on this later), a team of developers will use this spec to make it happen on the next cycle.</p>

<p>The key to Shaping is that it has to happen at <strong>the proper level of abstraction</strong>. Go too abstract, and the dev team might end up building the wrong thing. Go too concrete, and they have no wiggle room to work around a technical pitfall or revise a design choice.</p>

<p><img class="right" src="/images/posts/2019-09-29/knob.png" width="400" title="‚ÄòAbstraction knob‚Äô" ></p>

<p>For example, they‚Äôd use fat marker drawings instead of wireframes, to avoid delving too deep into the UI design details.</p>

<p>You want to end up with a good definition of the problem and a rough sketch of the solution. A clear sense of what‚Äôs part of the solution and what‚Äôs out of scope. A set of elements and how they connect to each other, but no comprehensive list of tasks or high-res mockups. Those things will come later when the dev team takes over and starts exploring the solution.</p>

<p><img class="left" src="/images/posts/2019-09-29/fatMarker.png" width="150" title="‚ÄòFat marker sketch‚Äô" ></p>

<p>Only once shaping is complete, they‚Äôd take it to the <a href="https://basecamp.com/shapeup/2.2-chapter-08#the-betting-table"><em>‚Äúbetting table‚Äú</em></a> where they decide if this is something they want to bet the next six weeks on. If the pitch is , it goes into the next cycle. If it‚Äôs not, then nothing happens. There‚Äôs no centralized backlog or list of rejected ideas. If somebody considers it important or thinks that a better solution can be found, they‚Äôll lobby for it again six weeks later.</p>

<h2>Evaluating new ideas and user requests</h2>

<p>Every single new idea and feature request gets the same answer:</p>

<p><img class="center" src="/images/posts/2019-09-29/interesting.png" width="400" title="‚ÄòInteresting! Maybe some time‚Äô" ></p>

<p>Basecamp believes an idea needs to go through the shaping process detailed above before they‚Äôre ready to bet on it.  When a new request comes in, they‚Äôd first try to identify what‚Äôs the user need (which sometimes might be quite different from what the user is asking for). Then, they see how they can solve the requirement with a minimal amount of effort. They acknowledge there‚Äôs always a better, more complete solution if you have infinite time at your disposal. The trick here is to find a good solution that works under the given constraints (in their case, that it can be built by a small team of engineers and designers in no more than six weeks)</p>

<p>If they‚Äôre not able to narrow down the problem and it‚Äôs not critical, they simply let it rest and wait to see if the same problem shows up again, so they can get a better sense of what they‚Äôre solving for. <strong>Grab-bags such as: ‚ÄúRedesign profile page‚Äù or ‚ÄúRefactor engine‚Äù are a no-go</strong>. The scope has to be well-defined before they‚Äôre ready to bet on an idea.</p>

<h2>Showing progress</h2>

<p>This is how we track progress in our industry:</p>

<p><img class="center" src="/images/posts/2019-09-29/scrum.jpg" width="700" title="‚ÄòWall full of post-it notes‚Äô" ></p>

<p>The problem with this approach is that it only works if all required tasks are known up-front. And let‚Äôs face, 99% of the time, that‚Äôs not the case. Most of the time, you‚Äôd start coding the first task only to discover that a new component needs to be added, and you‚Äôll have to fix a few connections this change will introduce.</p>

<p>The book acknowledges this exploration phase as an inherent part of the developers' work. It makes the distinction between 2 different types of tasks:</p>

<ul>
<li><strong>Imagined tasks</strong>: Those thought about before you start coding</li>
<li><strong>Discovered tasks</strong>: Those you discover as you go.</li>
</ul>


<p>The tool they came up with to communicate progress are <a href="https://basecamp.com/features/hill-charts">Hill Charts</a>, and they look like this:</p>

<p><img class="center" src="/images/posts/2019-09-29/hillChart1.png" width="600" title="‚ÄòHill Chart‚Äô" ></p>

<p>As you can tell, it‚Äôs not (only) a function of pending tasks, but also of confidence in that all remaining tasks have been discovered.</p>

<p><img class="center" src="/images/posts/2019-09-29/hillChart2.png" width="600" title="‚ÄòHill Chart 2‚Äô" ></p>

<p>A good way of gaining confidence at the start of a project is to begin with the pieces that present the most uncertainty, and move them to the top of the hill first. Doing this before finishing the downhill stuff reduces the chances the project will be late.</p>

<hr />

<p>That‚Äôs all‚Ä¶</p>

<p>If you enjoyed the review, you‚Äôll love the book. <a href="https://basecamp.com/shapeup">Go check it out!!</a></p>

<p> <img class="right-fill" src="/images/signatures/signature5.png" width="200" title="‚ÄòMy signature‚Äô" ></p>
<div class="footnotes">
<hr/>
<ol>
<li id="fn:1">
<p>Not sure why they‚Äôre not referred to as PMs in the book<a href="#fnref:1" rev="footnote">&#8617;</a></p></li>
</ol>
</div>

]]></content>
  </entry>
  
</feed>
