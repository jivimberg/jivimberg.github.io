<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Coverage | Coding Forest]]></title>
  <link href="http://jivimberg.io/blog/categories/coverage/atom.xml" rel="self"/>
  <link href="http://jivimberg.io/"/>
  <updated>2023-09-13T06:30:37+00:00</updated>
  <id>http://jivimberg.io/</id>
  <author>
    <name><![CDATA[Juan Ignacio Vimberg]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JaCoCo &amp; Kotlin: Coverage on Generated Code]]></title>
    <link href="http://jivimberg.io/blog/2018/08/12/jacoco-and-kotlin-coverage-on-generated-code/"/>
    <updated>2018-08-12T21:26:43-07:00</updated>
    <id>http://jivimberg.io/blog/2018/08/12/jacoco-and-kotlin-coverage-on-generated-code</id>
    <content type="html"><![CDATA[<p>JaCoCo works <em>flawlessly</em> with Kotlin. Except when it reports lines not covered on generated code üò°. Fortunately there‚Äôs a fix already in place.</p>

<!--more-->


<hr />

<h3><em>Update 08/26:</em> <strong>JaCoCo 0.8.2 has now officially been released</strong> üëè No need to use the <em>0.8.2-SNAPSHOT</em> anymore.</h3>

<hr />

<p>{% img center /images/posts/2018-08-12/JaCoCo-before.png 720 ‚ÄôJaCoCo before‚Äô %}</p>

<p>{% blockquote Me, Every time I saw the coverage report %}
What!? I didn‚Äôt even write those functions! There‚Äôs no way I‚Äôm writing tests for them. I‚Äôm pretty sure the compiler knows what it‚Äôs doing‚Ä¶
{% endblockquote %}</p>

<p>Good news is that this <a href="https://github.com/goodwinnk">has been fixed</a> in the latest JaCoCo release (thanks to <a href="https://github.com/goodwinnk">goodwink</a>). Bad news is that <strong>0.8.2 is not out yet</strong> üòû</p>

<p>If you are like me, and can‚Äôt wait to get this working, you can <strong>use the SNAPSHOT version of JaCoCo</strong> making this changes on your <code>build.gradle</code>:</p>

<p>{% codeblock lang:kotlin %}
repositories {
    ‚Ä¶
    maven(&ldquo;<a href="https://oss.sonatype.org/content/repositories/snapshots">https://oss.sonatype.org/content/repositories/snapshots</a>&rdquo;)
}</p>

<p>jacoco {
    toolVersion = &ldquo;0.8.2-SNAPSHOT&rdquo;
}</p>

<p>{% endcodeblock %}</p>

<p><em>(I‚Äôm using <a href="https://github.com/gradle/kotlin-dsl">Gradle with Kotlin DSL</a> in this example)</em></p>

<p>Now you can finally take your Kotlin coverage to 100% without having to write tests for <code>component1()</code> and <code>component2()</code>.</p>

<p>{% img center /images/posts/2018-08-12/JaCoCo-after.png 720 ‚ÄôJaCoCo after‚Äô %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jacoco & Gradle - How to Verify Coverage With Exclusions]]></title>
    <link href="http://jivimberg.io/blog/2018/04/26/gradle-verify-coverage-with-exclusions/"/>
    <updated>2018-04-26T08:49:52-07:00</updated>
    <id>http://jivimberg.io/blog/2018/04/26/gradle-verify-coverage-with-exclusions</id>
    <content type="html"><![CDATA[<p>A post about how to add exclusions to your Jacoco test coverage verification in Gradle.</p>

<!--more-->


<p>This is how you setup Jacoco to fail when the code doesn‚Äôt meet the expected coverage threshold:</p>

<p>{% gist ea79614ce9b80c29b03be8326586f238 %}</p>

<p>See that <code>rule</code>?  I‚Äôm not setting any particular <code>element</code> so <a href="https://docs.gradle.org/current/javadoc/org/gradle/testing/jacoco/tasks/rules/JacocoViolationRule.html#getElement--">by default it‚Äôll set <em>BUNDLE</em></a>. <strong>This is just what I want as I‚Äôd like to set a threshold for the coverage of the entire module.</strong></p>

<p>So if I need to exclude certain <strong>packages</strong> or <strong>files</strong> from the count this is what I do:</p>

<p>{% gist 3ee0beaa9ab8b20b48e4273378dcd30e %}</p>

<h3>Why <em>exclude</em> doesn‚Äôt work</h3>

<p>My first approach was setting the <code>excludes</code> property on the rule like this:</p>

<p>{% gist 0962942885d4db41a9dad890aba5d225 %}</p>

<p>The reason this doesn‚Äôt work is that <code>excludes</code> works on objects of the type defined with the <code>element</code> property. In this case the type is <em>BUNDLE</em> whereas the thing we want to exclude are <strong>packages</strong> and <strong>files</strong>.</p>
]]></content>
  </entry>
  
</feed>
